From c60b5b3ac53c7fc9b3baf9729c4f848b21e9959e Mon Sep 17 00:00:00 2001
From: Sergii Piatakov <sergii.piatakov@globallogic.com>
Date: Thu, 15 Nov 2018 15:21:34 +0200
Subject: [PATCH 1/2] improve calculation accuracy

Allow using float point arguments to avoid truncation.

Test: Add (4.9, 4.9) should return 10.
Signed-off-by: Sergii Piatakov <sergii.piatakov@globallogic.com>

fix truncation error

To convert float to integer the truncation is performed, but the
rounding is expected.

Test: Add (4.9, 4.9) should return 10.
Signed-off-by: Sergii Piatakov <sergii.piatakov@globallogic.com>

	modified:   calculator.cpp

	modified:   calculator.cpp
	modified:   calculator.h
---
 calculator.cpp | 8 ++++++--
 calculator.h   | 4 ++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/calculator.cpp b/calculator.cpp
index 3c63184..34f8d05 100644
--- a/calculator.cpp
+++ b/calculator.cpp
@@ -1,11 +1,15 @@
 #include "calculator.h"
 
-int Calculator::Add (int a, int b)
+int Calculator::Add (double a, double b)
 {
+<<<<<<< HEAD
     return a + b;
+=======
+	return a + b + 0.5;
+>>>>>>> 4ad40a3 (fix truncation error)
 }
 
-int Calculator::Sub (int a, int b)
+int Calculator::Sub (double a, double b)
 {
     return Add (a, -b);
 }
diff --git a/calculator.h b/calculator.h
index 84ff414..3740907 100644
--- a/calculator.h
+++ b/calculator.h
@@ -4,8 +4,8 @@
 class Calculator
 {
     public:
-        int Add (int, int);
-        int Sub (int, int);
+        int Add (double, double);
+        int Sub (double, double);
 };
 
 #endif//CALCULATOR_H
-- 
2.51.0.windows.1

